c
 c
c
self.increment!(:sent_times, 1)
self.update(sent_times: 0)
Event.find(50)
self.update(sent_times: sent_times+1)
update
save
Event.find(50)
self.save
self.save!
id
Event.find(50)
Events.find(50)
sent_times
n
sent_times
c
reminder_params
params
c
reminder_params
params
c
params.methods
params.class
params
rarams
c
@contract.from_date.to_s
@contract.from_date.class
@contract.from_date
@contract
c
@akt.from_date.class
@akt.from_date
@akt
c
@akts.first
@akts.all
@akts
c
res
c
n
email_to
res
c
n
User.find(::ADMIN_ID).email
User.find(::ADMIN_ID).first.email
email_to
c
—Å
::ADMIN_ROLE_ID
::ADMIN_ID
c
self
c
self
c
self
self.class
self
self.methods
self
self.class
class
class_eval "notify_user_id = 4"
self.class
class
methods
class_variables
instance_variables
list
self
instance_eval "notify_user_id = 4"
self
self.notify_user_id = 4
self
@notify_user_id
self
n
@notify_user_id
n
@notify_user_id
notify_user_id
c
arguments
exit
queue_name
self.public_methods
self.private_methods
self.public_methods
self.instance_variables
self.methods
arguments
c
@arguments
@rrguments
self.instance_variables
self.methods
arguments
c
arguments
c
n
c
arguments[3].id
self.arguments[3].id
self.arguments[3]
self.arguments[2]
self.arguments[0]
self.arguments
self.arguments\
self.arguments.to_json
self.arguments.methods
self.arguments.event
self.arguments
self
c
self.arguments
self.methods
current_user
@current_user
current_user
User.first
c
e.instance_of?
e.instance_of
e.message
e.methods
e
list
pry
help
where
e
e.class
e.displayprivate_methods
e.display
e.message
e.exception
e.methods
e.class
e
c
exception.methods
exception.backtrace
exception.inspect
exception.to_yaml
exception.methods
exception.message
exception
c
data['date']
data
c
data['data']['date']
data['date']
data
c
data['data']['date']
data
data[:date]
data['date']
data
c
notify_user_id
given_date_string
c
e.message
n
current_user_id
n
cookies.signed[:current_user_id]
c
res
c
res
rs
c
res
c
events.count
events
c
events
c
events
c
events.first
events.all
events
n
events.first
c
exit
  .where(done_by: '')
  .where(to_send: true)
  .where(on_date: given_date_string.to_date).or(where(on_date: given_date_string.to_date+1))
Event
events.first
events
c
events
c
events
c
events
c
events
exit
Event.where(on_date: given_date_string.to_date+1)
Event.where(on_date: given_date_string.to_date)
events = Event.where(on_date: given_date_string.to_date)
events.first
events
c
events.first
events.all
events
c
exit
reminder.reminderable.contract
reminder.reminderable
reminder.reminderable.responsible_user
reminder.reminderable.responsible_useer
reminder.reminderable
reminder.name
reminder.id
n
c
@current_user.allowed_users_ids
exit
@current_user.allowed_users_ids
@current_user
exit
Contract.all.each{|c| print c.id}
Contract.all.to_a {|c| print c.id}
Contract.all{|c| print c.id}
Contract.all
Contract.all{}
Contract.all
Contract.all {|c| print c.id}
Contract.all {|c| c.id}
Contract.all {|c| c.id.to_str}
Contract.all do {|c| c.id.to_str}
Contract.all do {|c| c.id.to_str }
Contract.all do {|c| c.id }
Contract.all do { |c| c.id }
Contract.all
c
@list_type
n
